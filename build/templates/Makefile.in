# Makefile for languages/eclectus

# configuration settings
BUILD_DIR       := @build_dir@
LOAD_EXT        := @load_ext@
O               := @o@

# Set up commands
PARROT          := ../../parrot@exe@
PERL            := @perl@
RM_F            := @rm_f@
BUILD_DYNPMC    := $(PERL) @build_dir@/tools/build/dynpmc.pl
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

# Set up directories
PARROT_DYNEXT := @build_dir@/runtime/parrot/dynext
PMC_DIR       := src/pmc

ECLECTUS_GROUP  := $(PMC_DIR)/eclectus_group@load_ext@
PMCS            := \
    eclectusboolean \
    eclectuscharacter \
    eclectusemptylist \
    eclectusfixnum \
    eclectuspair \
    eclectusstring \
    eclectusvector
PMC_SOURCES     := \
    $(PMC_DIR)/eclectusboolean.pmc \
    $(PMC_DIR)/eclectuscharacter.pmc \
    $(PMC_DIR)/eclectusemptylist.pmc \
    $(PMC_DIR)/eclectusfixnum.pmc \
    $(PMC_DIR)/eclectuspair.pmc \
    $(PMC_DIR)/eclectusstring.pmc \
    $(PMC_DIR)/eclectusvector.pmc


# The default target
default: build

# This is a listing of all targets, that are meant to be called by users
help :
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "Building:"
	@echo "  build:             Builds the dynamic PMCSs needed by Eclectus."
	@echo "                     This is the default target."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  smoke:             Run the test suite and send report to the smolder server"
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Clean up."
	@echo "  clean-test:        Clean up temporary files from testing."
	@echo "  clean-pmc:         Clean up temporary files from the PMC build process."
	@echo "  realclean:         Clean and remove Makefile."
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

# regenerate the Makefile
Makefile: build/templates/Makefile.in
	$(PERL) Configure.pl

# Compilation:
build: $(ECLECTUS_GROUP) driver_nqp.pbc

export DYNPMC_INCLUDE=$(BUILD_DIR)/src/dynpmc

$(ECLECTUS_GROUP): $(PARROT) $(PMC_SOURCES)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)

driver_nqp.pbc: src/builtins/all.pbc driver_nqp.pir
	$(PARROT) -o driver_nqp.pbc driver_nqp.pir

src/builtins/all.pbc: src/builtins/all.pir
	$(PARROT) -o src/builtins/all.pbc src/builtins/all.pir

# testing
test: build
	$(PERL) t/harness

# run the test suite, create a TAP archive and send it off to smolder
smoke : build
	- $(PERL) t/harness --archive --send-to-smolder

# cleaning up

clean: clean-pmc clean-test
	$(RM_F) \
  stst.out \
  driver_nqp.pbc \
  src/builtins/all.pbc

# nothing to do
clean-test:


clean-pmc:
	$(RM_F) \
  $(PMC_DIR)/*.h \
  $(PMC_DIR)/*.c \
  $(PMC_DIR)/*.dump \
  $(PMC_DIR)/*$(O) \
  $(PMC_DIR)/*$(LOAD_EXT) \
  $(PMC_DIR)/*.exp \
  $(PMC_DIR)/*.ilk \
  $(PMC_DIR)/*.manifest \
  $(PMC_DIR)/*.pdb \
  $(PMC_DIR)/*.lib


realclean: clean
	$(RM_F) Makefile

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:
